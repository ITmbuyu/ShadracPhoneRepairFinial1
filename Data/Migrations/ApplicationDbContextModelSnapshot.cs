// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShadracPhoneRepairFinial1.Data;

namespace ShadracPhoneRepairFinial1.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.ApprovalMessages", b =>
                {
                    b.Property<int>("ApprovalMessagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AMessages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalMessagesId");

                    b.ToTable("ApprovalMessages");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BrandRate")
                        .HasColumnType("float");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.CApprovalMessages", b =>
                {
                    b.Property<int>("CApprovalMessagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CMessages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CApprovalMessagesId");

                    b.ToTable("CApprovalMessages");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Colour", b =>
                {
                    b.Property<int>("ColourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColourId");

                    b.ToTable("Colours");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceDescription", b =>
                {
                    b.Property<int>("DeviceDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceDescriptionId");

                    b.HasIndex("BrandId");

                    b.ToTable("DeviceDescriptions");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceProblem", b =>
                {
                    b.Property<int>("DeviceProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostOfP")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceProblemId");

                    b.ToTable("DeviceProblems");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DevicePurchase", b =>
                {
                    b.Property<int>("DevicePurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceBattery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceCamera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DevicePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DevicePrice")
                        .HasColumnType("float");

                    b.Property<string>("DeviceProcesser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceRAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceROM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devicestorage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DevicePurchaseId");

                    b.ToTable("DevicePurchase");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceStatus", b =>
                {
                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovalOfCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalOfRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMEI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RepairStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnicianId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrackingNumber");

                    b.HasIndex("RepairStatusId");

                    b.ToTable("DeviceStatuses");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceStatusWalkIns", b =>
                {
                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovalOfCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMEI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RepairStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnicianId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WalkInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WalkInStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalkInTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrackingNumber");

                    b.HasIndex("RepairStatusId");

                    b.ToTable("DeviceStatusesWalkIns");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmpHours")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EmpRate")
                        .HasColumnType("float");

                    b.Property<string>("EmpSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("EmpWage")
                        .HasColumnType("float");

                    b.Property<string>("EmployeeRole")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Parts", b =>
                {
                    b.Property<int>("PartsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Part_Cost")
                        .HasColumnType("float");

                    b.Property<string>("Part_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartsId");

                    b.ToTable("parts");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.PartsCollection", b =>
                {
                    b.Property<int>("PartsCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quaunity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartsCollectionId");

                    b.ToTable("PartsCollections");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentStatusId");

                    b.ToTable("PaymentStatus");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.RepairStatus", b =>
                {
                    b.Property<int>("RepairStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepairStatusId");

                    b.ToTable("RepairStatuses");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<int>("ColourId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceProblemId")
                        .HasColumnType("int");

                    b.Property<string>("IMEI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("ApprovalMessagesId");

                    b.HasIndex("CApprovalMessagesId");

                    b.HasIndex("ColourId");

                    b.HasIndex("DeviceDescriptionId");

                    b.HasIndex("DeviceProblemId");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("StorageId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.RequestPayments", b =>
                {
                    b.Property<int>("RequestPaymentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVVnumber")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("DateTimeofpayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priceofrepair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumberOfRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentmethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestPaymentsId");

                    b.ToTable("requestPayments");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Storage", b =>
                {
                    b.Property<int>("StorageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StorageCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorageId");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Supplier_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier_CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.SupplierPart", b =>
                {
                    b.Property<int>("SupplierPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PartSupplied_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartSupplied_Quantity")
                        .HasColumnType("int");

                    b.Property<int>("PartsId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierPartId");

                    b.HasIndex("PartsId");

                    b.HasIndex("SupplierId");

                    b.ToTable("supplierParts");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.TradeinCollect", b =>
                {
                    b.Property<int>("TradeinCollectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<int>("ColourId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceDescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("DevicePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMEI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("TradeinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TradeinCollectId");

                    b.HasIndex("ApprovalMessagesId");

                    b.HasIndex("CApprovalMessagesId");

                    b.HasIndex("ColourId");

                    b.HasIndex("DeviceDescriptionId");

                    b.HasIndex("StorageId");

                    b.ToTable("TradeinCollect");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.TradeinDropOff", b =>
                {
                    b.Property<int>("TradeinDropOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<int>("ColourId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceProblemId")
                        .HasColumnType("int");

                    b.Property<string>("IMEI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("TradeinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WalkInDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WalkInTimesId")
                        .HasColumnType("int");

                    b.HasKey("TradeinDropOffId");

                    b.HasIndex("ApprovalMessagesId");

                    b.HasIndex("CApprovalMessagesId");

                    b.HasIndex("ColourId");

                    b.HasIndex("DeviceDescriptionId");

                    b.HasIndex("DeviceProblemId");

                    b.HasIndex("StorageId");

                    b.HasIndex("WalkInTimesId");

                    b.ToTable("TradeinDropOff");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.WalkInPayments", b =>
                {
                    b.Property<int>("WalkInPaymentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVVnumber")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("DateTimeofpayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priceofrepair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumberOfRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentmethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WalkInPaymentsId");

                    b.ToTable("WalkInPayments");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.WalkInRequest", b =>
                {
                    b.Property<int>("WalkInRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CApprovalMessagesId")
                        .HasColumnType("int");

                    b.Property<int>("ColourId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceProblemId")
                        .HasColumnType("int");

                    b.Property<string>("IMEI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WalkInDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WalkInTimesId")
                        .HasColumnType("int");

                    b.HasKey("WalkInRequestId");

                    b.HasIndex("ApprovalMessagesId");

                    b.HasIndex("CApprovalMessagesId");

                    b.HasIndex("ColourId");

                    b.HasIndex("DeviceDescriptionId");

                    b.HasIndex("DeviceProblemId");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("StorageId");

                    b.HasIndex("WalkInTimesId");

                    b.ToTable("WalkInRequests");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.WalkInTimes", b =>
                {
                    b.Property<int>("WalkInTimesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WalkInTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WalkInTimesId");

                    b.ToTable("WalkInTimes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceDescription", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceStatus", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.RepairStatus", "RepairStatus")
                        .WithMany()
                        .HasForeignKey("RepairStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairStatus");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.DeviceStatusWalkIns", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.RepairStatus", "RepairStatus")
                        .WithMany()
                        .HasForeignKey("RepairStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairStatus");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.Request", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApprovalMessages", "ApprovalMessages")
                        .WithMany()
                        .HasForeignKey("ApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.CApprovalMessages", "CApprovalMessages")
                        .WithMany()
                        .HasForeignKey("CApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceDescription", "DeviceDescription")
                        .WithMany()
                        .HasForeignKey("DeviceDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceProblem", "DeviceProblem")
                        .WithMany()
                        .HasForeignKey("DeviceProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalMessages");

                    b.Navigation("CApprovalMessages");

                    b.Navigation("Colour");

                    b.Navigation("DeviceDescription");

                    b.Navigation("DeviceProblem");

                    b.Navigation("PaymentStatus");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.SupplierPart", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.Parts", "Parts")
                        .WithMany()
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parts");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.TradeinCollect", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApprovalMessages", "ApprovalMessages")
                        .WithMany()
                        .HasForeignKey("ApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.CApprovalMessages", "CApprovalMessages")
                        .WithMany()
                        .HasForeignKey("CApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceDescription", "DeviceDescription")
                        .WithMany()
                        .HasForeignKey("DeviceDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalMessages");

                    b.Navigation("CApprovalMessages");

                    b.Navigation("Colour");

                    b.Navigation("DeviceDescription");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.TradeinDropOff", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApprovalMessages", "ApprovalMessages")
                        .WithMany()
                        .HasForeignKey("ApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.CApprovalMessages", "CApprovalMessages")
                        .WithMany()
                        .HasForeignKey("CApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceDescription", "DeviceDescription")
                        .WithMany()
                        .HasForeignKey("DeviceDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceProblem", "DeviceProblem")
                        .WithMany()
                        .HasForeignKey("DeviceProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.WalkInTimes", "WalkInTimes")
                        .WithMany()
                        .HasForeignKey("WalkInTimesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalMessages");

                    b.Navigation("CApprovalMessages");

                    b.Navigation("Colour");

                    b.Navigation("DeviceDescription");

                    b.Navigation("DeviceProblem");

                    b.Navigation("Storage");

                    b.Navigation("WalkInTimes");
                });

            modelBuilder.Entity("ShadracPhoneRepairFinial1.Models.WalkInRequest", b =>
                {
                    b.HasOne("ShadracPhoneRepairFinial1.Models.ApprovalMessages", "ApprovalMessages")
                        .WithMany()
                        .HasForeignKey("ApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.CApprovalMessages", "CApprovalMessages")
                        .WithMany()
                        .HasForeignKey("CApprovalMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Colour", "Colour")
                        .WithMany()
                        .HasForeignKey("ColourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceDescription", "DeviceDescription")
                        .WithMany()
                        .HasForeignKey("DeviceDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.DeviceProblem", "DeviceProblem")
                        .WithMany()
                        .HasForeignKey("DeviceProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShadracPhoneRepairFinial1.Models.WalkInTimes", "WalkInTimes")
                        .WithMany()
                        .HasForeignKey("WalkInTimesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalMessages");

                    b.Navigation("CApprovalMessages");

                    b.Navigation("Colour");

                    b.Navigation("DeviceDescription");

                    b.Navigation("DeviceProblem");

                    b.Navigation("PaymentStatus");

                    b.Navigation("Storage");

                    b.Navigation("WalkInTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
